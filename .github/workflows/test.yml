name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_package:
    name: Test ${{ matrix.os }} Python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-11", "ubuntu-20.04", "windows-latest"]
        python_version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}
        architecture: x64
    - name: Get latest CMake and ninja
      # Using 'latest' branch, the most recent CMake and ninja are installed.
      uses: lukka/get-cmake@latest
    - uses: actions/checkout@v4
    - name: Install requirements and package
      run: |
        python -m pip install -U scikit-build
        python -m pip install -v .[dev]

    - name: Run pytest
      run: |
       python -m pip install -r tests/integration/requirements.txt
       python -m pytest tests

    - name: Run pytest with repeat
      run: | 
       python -m pip install pytest-repeat
       python -m pytest --count=10 tests
    - name: Run pytest with memray
      if: matrix.python_version == '3.11' && matrix.os == 'ubuntu-20.04'
      run: | 
       python -m pip install -v .[memray]
       python -m pytest tests/unit/ --force-flaky --max-runs=4 --min-passes=3 --memray --stacks=7 --native

    - name: Run benchmarks
      if: matrix.python_version == '3.11' && matrix.os == 'ubuntu-20.04'
      run: |
       python -m pip install richbench
       richbench benchmarks/
